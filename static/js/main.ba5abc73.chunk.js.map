{"version":3,"sources":["logo.svg","PathfindingVisualizer/Node/Node.jsx","algorithms/dijkstra.js","PathfindingVisualizer/PathfindingVisualizer.jsx","algorithms/asearch.js","algorithms/dfs.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Node","this","props","col","isFinish","isStart","isWall","onMouseDown","onMouseEnter","onMouseUp","row","extraClassName","direction","totaldistance","distance","weight","heuristicValue","id","className","Component","dijkstra","grid","startNode","finishNode","visitedNodesInOrder","unvisitedNodes","nodes","node","push","getAllNodes","length","sortNodesByDistance","closestNode","shift","Infinity","isVisited","updateUnvisitedNeighbors","sort","nodeA","nodeB","unvisitedNeighbors","neighbors","filter","neighbor","getUnvisitedNeighbors","previousNode","PathfindingVisualizer","initialState","mouseIsPressed","state","getInitialGrid","setState","newGrid","getNewGridWithWallToggled","nodesInShortestPathOrder","i","setTimeout","animateShortestPath","document","getElementById","node2","last_row","last_col","currRow","currCol","j","currentNode","unshift","getNodesInShortestPathOrderD","animateDijkstra","vnio","start","target","ol","curr","nos","td","a","c","cha","chc","Math","abs","d","chd","b","chb","asearch","sp","getNodesInShortestPathOrderA","reverse","animateAsearch","nulll","vis","cNode","console","log","includes","pop","dfs","getNodesInShortestPathOrderDFS","animateDFS","componentDidMount","map","rowIdx","key","nodeIdx","getNewGridWithWallToggledOff","handleMouseDown","handleMouseEnter","handleMouseUp","getNewGridWithStart","getNewGridWithEnd","rM","count","min","max","getNewGridWithWallToggledOn","ch","floor","random","resetMaze","grid1","refs","visualizationType","value","visualizeDijkstra","visualizeASearch","visualizeDFS","ref","onClick","startVisualization","createVerticalMaze","createHorizontalMaze","createRandomMaze","color","currentRow","createNode","slice","newNode","App","title","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ba5abc73.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport './Node.css';\r\n\r\nexport default class Node extends Component {\r\n  render() {\r\n    const { \r\n      col,\r\n      isFinish,\r\n      isStart,\r\n      isWall,\r\n      onMouseDown,\r\n      onMouseEnter,\r\n      onMouseUp,\r\n      row,\r\n      direction,\r\n      totaldistance,\r\n      distance,\r\n      weight,\r\n      heuristicValue,\r\n    } = this.props;\r\n    const extraClassName = isFinish\r\n      ? 'node-finish'\r\n      : isStart\r\n        ? 'node-start'\r\n        : isWall\r\n          ? 'node-wall'\r\n          : '';\r\n    return (\r\n      <div\r\n        id={`node-${row}-${col}`}\r\n        className={`node ${extraClassName}`}\r\n        onMouseDown={() => onMouseDown(row, col)}\r\n        onMouseEnter={() => onMouseEnter(row, col)}\r\n        onMouseUp={() => onMouseUp()}></div>\r\n    );\r\n  }\r\n}\r\n","export function dijkstra(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  startNode.distance = 0;\r\n  const unvisitedNodes = getAllNodes(grid);\r\n  while (!!unvisitedNodes.length) {\r\n    sortNodesByDistance(unvisitedNodes);\r\n    const closestNode = unvisitedNodes.shift();\r\n    // If we encounter a wall, we skip it.\r\n    if (closestNode.isWall) continue;\r\n    // If the closest node is at a distance of infinity,\r\n    // we must be trapped and should therefore stop.\r\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\r\n    closestNode.isVisited = true;\r\n    visitedNodesInOrder.push(closestNode);\r\n    if (closestNode === finishNode) return visitedNodesInOrder;\r\n    updateUnvisitedNeighbors(closestNode, grid);\r\n  }\r\n}\r\n\r\nfunction sortNodesByDistance(unvisitedNodes) {\r\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\r\n}\r\n\r\nfunction updateUnvisitedNeighbors(node, grid) {\r\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\r\n  for (const neighbor of unvisitedNeighbors) {\r\n    neighbor.distance = node.distance + 1;\r\n    neighbor.previousNode = node;\r\n  }\r\n}\r\n\r\nfunction getUnvisitedNeighbors(node, grid) {\r\n  const neighbors = [];\r\n  const {col, row} = node;\r\n  if (row > 0) neighbors.push(grid[row - 1][col]);\r\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n  if (col > 0) neighbors.push(grid[row][col - 1]);\r\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n  return neighbors.filter(neighbor => !neighbor.isVisited);\r\n}\r\n\r\nfunction getAllNodes(grid) {\r\n  const nodes = [];\r\n  for (const row of grid) {\r\n    for (const node of row) {\r\n      nodes.push(node);\r\n    }\r\n  }\r\n  return nodes;\r\n}\r\n\r\n// Backtracks from the finishNode to find the shortest path.\r\n// Only works when called *after* the dijkstra method above.\r\nexport function getNodesInShortestPathOrderD(finishNode) {\r\n  const nodesInShortestPathOrder = [];\r\n  let currentNode = finishNode;\r\n  while (currentNode !== null) {\r\n    nodesInShortestPathOrder.unshift(currentNode);\r\n    currentNode = currentNode.previousNode;\r\n  }\r\n  return nodesInShortestPathOrder;\r\n}\r\n","import React,{Component} from 'react';\r\nimport Node from './Node/Node.jsx';\r\nimport {dijkstra, getNodesInShortestPathOrderD} from '../algorithms/dijkstra';\r\nimport {asearch, getNodesInShortestPathOrderA} from '../algorithms/asearch';\r\nimport {dfs, getNodesInShortestPathOrderDFS} from '../algorithms/dfs';\r\n\r\nimport './PathfindingVisualizer.css';\r\n\r\nconst START_NODE_ROW = 9;\r\nconst START_NODE_COL = 15;\r\nconst FINISH_NODE_ROW = 9;\r\nconst FINISH_NODE_COL = 35;\r\n\r\nexport default class PathfindingVisualizer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      grid: [],\r\n      mouseIsPressed: false,\r\n    };\r\n    this.state = this.initialState;\r\n  }\r\n  componentDidMount() {\r\n    const grid = getInitialGrid();\r\n    this.setState({grid});\r\n  }\r\n\r\n  handleMouseDown(row, col) {\r\n    const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n    this.setState({grid: newGrid, mouseIsPressed: true});\r\n  }\r\n\r\n  handleMouseEnter(row, col) {\r\n    if (!this.state.mouseIsPressed) return;\r\n    const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n    this.setState({grid: newGrid});\r\n  }\r\n\r\n  handleMouseUp() {\r\n    this.setState({mouseIsPressed: false});\r\n  }\r\n\r\n  animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n      if (i === visitedNodesInOrder.length) {\r\n        setTimeout(() => {\r\n          this.animateShortestPath(nodesInShortestPathOrder);\r\n        }, 10 * i);\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        const node = visitedNodesInOrder[i];\r\n        document.getElementById(`node-${node.row}-${node.col}`).className =\r\n        'node node-visited';\r\n      }, 10 * i);\r\n    }\r\n  }\r\n\r\n  animateAsearch(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n      if (i === visitedNodesInOrder.length) {\r\n        setTimeout(() => {\r\n          this.animateShortestPath(nodesInShortestPathOrder);\r\n        }, 40 * i);\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        const node = visitedNodesInOrder[i];\r\n        document.getElementById(`node-${node.row}-${node.col}`).className =\r\n        'node node-visited';\r\n      }, 40 * i);\r\n    }\r\n  }\r\n  animateDFS(visitedNodesInOrder,nodesInShortestPathOrder) {\r\n    for (let i = 0; i <=visitedNodesInOrder.length; i++) {\r\n      if (i === visitedNodesInOrder.length) {\r\n        setTimeout(() => {\r\n          this.animateShortestPath(nodesInShortestPathOrder);\r\n        }, 40 * i);\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        const node = visitedNodesInOrder[i];\r\n        document.getElementById(`node-${node.row}-${node.col}`).className =\r\n        'node node-visited';\r\n      }, 40 * i);\r\n    }\r\n  }\r\n\r\n\r\n  animateShortestPath(nodesInShortestPathOrder) {\r\n    \r\n    if(nodesInShortestPathOrder.length<=1)\r\n    {\r\n      setTimeout(() => {\r\n        document.getElementById(`node-${START_NODE_ROW}-${START_NODE_COL}`).className = \r\n        'node node-initial-mark-ca';\r\n      }, 50 * 0);\r\n    }\r\n    else {\r\n      setTimeout(() => {\r\n        document.getElementById(`node-${START_NODE_ROW}-${START_NODE_COL}`).className =\r\n        'node node-initial-mark';\r\n      }, 50 * 0);\r\n    }\r\n    for (let i = 1; i < (nodesInShortestPathOrder.length-1); i++) {\r\n      setTimeout(() => {\r\n        const node = nodesInShortestPathOrder[i];\r\n        const node2 = nodesInShortestPathOrder[i + 1];\r\n        var last_row = node.row;\r\n        var last_col = node.col;\r\n        var currRow = node2.row;\r\n        var currCol = node2.col;\r\n        if(currRow==last_row-1)\r\n        {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            'node node-shortest-path-up';\r\n        }\r\n        else if (currRow == last_row + 1) {\r\n\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            'node node-shortest-path-down';\r\n        }\r\n        else if(currCol == last_col - 1 ) {\r\n\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            'node node-shortest-path-left';\r\n        }\r\n        else {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            'node node-shortest-path-right';\r\n        }\r\n      }, 50 * i);\r\n    }\r\n    if(nodesInShortestPathOrder.length<=1)\r\n    {\r\n      setTimeout(() => {\r\n        document.getElementById(`node-${FINISH_NODE_ROW}-${FINISH_NODE_COL}`).className = \r\n        'node node-final-mark-nf';\r\n      }, 50 * 0);\r\n    }\r\n    else {\r\n      setTimeout(() => {\r\n        document.getElementById(`node-${FINISH_NODE_ROW}-${FINISH_NODE_COL}`).className = \r\n        'node node-final-mark';\r\n      }, 50 * (nodesInShortestPathOrder.length - 1));\r\n    }\r\n  }\r\n\r\n  visualizeDijkstra() {\r\n    const {grid} = this.state;\r\n    const startNode = grid[START_NODE_ROW][START_NODE_COL];\r\n    const finishNode = grid[FINISH_NODE_ROW][FINISH_NODE_COL];\r\n    for(let i=0;i<=20;i++)\r\n    {\r\n      for(let j=0;j<=48;++j)\r\n      {\r\n        grid[i][j].distance=Infinity;\r\n      }\r\n    }\r\n    const visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\r\n    const nodesInShortestPathOrder = getNodesInShortestPathOrderD(finishNode);\r\n    this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\r\n  }\r\n\r\n\r\n  visualizeASearch() {\r\n    const {grid} = this.state;\r\n    const startNode = grid[START_NODE_ROW][START_NODE_COL];\r\n    const finishNode = grid[FINISH_NODE_ROW][FINISH_NODE_COL];\r\n    const vnio=asearch(grid, startNode, finishNode);\r\n    for (let i = 0; i < vnio.length; i++) {\r\n      grid[vnio[i].row][vnio[i].col].distance=vnio[i].distance;\r\n    }\r\n    for(let i=0;i<=20;i++)\r\n    {\r\n      for(let j=0;j<=48;++j)\r\n      {\r\n        if(grid[i][j].distance==Infinity)\r\n        {\r\n          grid[i][j].distance=-1;\r\n        }\r\n      }\r\n    }\r\n    const sp = getNodesInShortestPathOrderA(grid,finishNode);\r\n    sp.reverse();\r\n    this.animateAsearch(vnio,sp);\r\n  }\r\n\r\n  visualizeDFS() {\r\n    const {grid} = this.state;\r\n    const startNode = grid[START_NODE_ROW][START_NODE_COL];\r\n    const finishNode = grid[FINISH_NODE_ROW][FINISH_NODE_COL];\r\n    const vnio=dfs(grid, startNode, finishNode);\r\n    const sp=getNodesInShortestPathOrderDFS(grid, startNode, finishNode);\r\n    console.log(vnio,sp);\r\n    this.animateDFS(vnio,sp);\r\n  }\r\n\r\n  resetMaze() {\r\n    this.componentDidMount();\r\n    const {grid, mouseIsPressed} = this.state;\r\n    return(\r\n      <>\r\n      <div className=\"grid\">\r\n      {grid.map((row, rowIdx) => {\r\n        return (\r\n          <div key={rowIdx}>\r\n          {row.map((node, nodeIdx) => {\r\n            const {row, col, isFinish, isStart, isWall} = node;\r\n            if(!((row==9 && col==15) || (row==9 && col==35)))\r\n            {\r\n              const newGrid = getNewGridWithWallToggledOff(this.state.grid, row, col);\r\n              document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              'node';\r\n              this.setState(this.state);\r\n              this.setState({grid: newGrid});\r\n              return (\r\n                <Node\r\n                key={nodeIdx}\r\n                col={col}\r\n                isFinish={isFinish}\r\n                isStart={isStart}\r\n                isWall={false}\r\n                mouseIsPressed={mouseIsPressed}\r\n                onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                onMouseEnter={(row, col) =>\r\n                  this.handleMouseEnter(row, col)\r\n                }\r\n                onMouseUp={() => this.handleMouseUp()}\r\n                row={row}></Node>\r\n              );\r\n            }\r\n            else if(row==9 && col==15)\r\n            {\r\n              const newGrid = getNewGridWithStart(this.state.grid, row, col);\r\n              document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              'node node-start';\r\n              this.setState({grid: newGrid});\r\n              return (\r\n                <Node\r\n                key={nodeIdx}\r\n                col={col}\r\n                isFinish={isFinish}\r\n                isStart={true}\r\n                isWall={false}\r\n                mouseIsPressed={mouseIsPressed}\r\n                onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                onMouseEnter={(row, col) =>\r\n                  this.handleMouseEnter(row, col)\r\n                }\r\n                onMouseUp={() => this.handleMouseUp()}\r\n                row={row}></Node>\r\n              );\r\n            }\r\n            else if(row==9 && col==35)\r\n            {\r\n              const newGrid = getNewGridWithEnd(this.state.grid, row, col);\r\n              document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              'node node-finish';\r\n              this.setState({grid: newGrid});\r\n              return (\r\n                <Node\r\n                key={nodeIdx}\r\n                col={col}\r\n                isFinish={true}\r\n                isStart={isStart}\r\n                isWall={false}\r\n                mouseIsPressed={mouseIsPressed}\r\n                onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                onMouseEnter={(row, col) =>\r\n                  this.handleMouseEnter(row, col)\r\n                }\r\n                onMouseUp={() => this.handleMouseUp()}\r\n                row={row}></Node>\r\n              );\r\n            }\r\n          })}\r\n          </div>\r\n        );\r\n      })}\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  createRandomMaze() {\r\n    this.rM();\r\n    let count=300;\r\n    let i=0;\r\n    const {grid, mouseIsPressed} = this.state;\r\n    return(\r\n      <>\r\n      <div className=\"grid\">\r\n      {grid.map((row, rowIdx) => {\r\n        return (\r\n          <div key={rowIdx}>\r\n          {row.map((node, nodeIdx) => {\r\n            i+=1;\r\n            const {row, col, isFinish, isStart, isWall} = node;\r\n            if(row===0 || row==20 || col==0 || col==48)\r\n            {\r\n              const newGrid = getNewGridWithWallToggledOn(this.state.grid, row, col);\r\n              document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              'node node-mazecr';\r\n              this.setState({grid: newGrid});\r\n              return (\r\n                <Node\r\n                key={nodeIdx}\r\n                col={col}\r\n                isFinish={isFinish}\r\n                isStart={isStart}\r\n                isWall={true}\r\n                mouseIsPressed={mouseIsPressed}\r\n                onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                onMouseEnter={(row, col) =>\r\n                  this.handleMouseEnter(row, col)\r\n                }\r\n                onMouseUp={() => this.handleMouseUp()}\r\n                row={row}></Node>\r\n              );\r\n            }\r\n            else if(!((row==9 && col==15) || (row==9 && col==35)) && count>0)\r\n            {\r\n              let ch=randomIntFromInterval(0,2);\r\n              console.log(ch);\r\n              if(ch===1)\r\n              {\r\n                const newGrid = getNewGridWithWallToggledOn(this.state.grid, row, col);\r\n                document.getElementById(`node-${node.row}-${node.col}`).className =\r\n                'node node-mazecr';\r\n                this.setState({grid: newGrid});\r\n                count-=1;\r\n                return (\r\n                  <Node\r\n                  key={nodeIdx}\r\n                  col={col}\r\n                  isFinish={isFinish}\r\n                  isStart={isStart}\r\n                  isWall={true}\r\n                  mouseIsPressed={mouseIsPressed}\r\n                  onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                  onMouseEnter={(row, col) =>\r\n                    this.handleMouseEnter(row, col)\r\n                  }\r\n                  onMouseUp={() => this.handleMouseUp()}\r\n                  row={row}></Node>\r\n                );\r\n              }\r\n              else {\r\n                const newGrid = getNewGridWithWallToggledOff(this.state.grid, row, col);\r\n                document.getElementById(`node-${node.row}-${node.col}`).className =\r\n                'node';\r\n                this.setState({grid: newGrid});\r\n                return (\r\n                  <Node\r\n                  key={nodeIdx}\r\n                  col={col}\r\n                  isFinish={isFinish}\r\n                  isStart={isStart}\r\n                  isWall={false}\r\n                  mouseIsPressed={mouseIsPressed}\r\n                  onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                  onMouseEnter={(row, col) =>\r\n                    this.handleMouseEnter(row, col)\r\n                  }\r\n                  onMouseUp={() => this.handleMouseUp()}\r\n                  row={row}></Node>\r\n                );\r\n              }\r\n            }\r\n            else if (!((row == 9 && col == 15) || (row == 9 && col == 35)) && count <= 0){\r\n              const newGrid = getNewGridWithWallToggledOff(this.state.grid, row, col);\r\n              document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              'node';\r\n              this.setState({ grid: newGrid });\r\n              return (\r\n                <Node\r\n                key={nodeIdx}\r\n                col={col}\r\n                isFinish={isFinish}\r\n                isStart={isStart}\r\n                isWall={false}\r\n                mouseIsPressed={mouseIsPressed}\r\n                onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                onMouseEnter={(row, col) =>\r\n                  this.handleMouseEnter(row, col)\r\n                }\r\n                onMouseUp={() => this.handleMouseUp()}\r\n                row={row}></Node>\r\n              );\r\n            }\r\n            else if (row == 9 && col == 15) {\r\n              const newGrid = getNewGridWithStart(this.state.grid, row, col);\r\n              document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              'node node-start';\r\n              this.setState({ grid: newGrid });\r\n              return (\r\n                <Node\r\n                key={nodeIdx}\r\n                col={col}\r\n                isFinish={isFinish}\r\n                isStart={isStart}\r\n                isWall={false}\r\n                mouseIsPressed={mouseIsPressed}\r\n                onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                onMouseEnter={(row, col) =>\r\n                  this.handleMouseEnter(row, col)\r\n                }\r\n                onMouseUp={() => this.handleMouseUp()}\r\n                row={row}></Node>\r\n              );\r\n            }\r\n            else if (row == 9 && col == 35) {\r\n              const newGrid = getNewGridWithEnd(this.state.grid, row, col);\r\n              document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              'node node-finish';\r\n              this.setState({ grid: newGrid });\r\n              return (\r\n                <Node\r\n                key={nodeIdx}\r\n                col={col}\r\n                isFinish={isFinish}\r\n                isStart={isStart}\r\n                isWall={false}\r\n                mouseIsPressed={mouseIsPressed}\r\n                onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                onMouseEnter={(row, col) =>\r\n                  this.handleMouseEnter(row, col)\r\n                }\r\n                onMouseUp={() => this.handleMouseUp()}\r\n                row={row}></Node>\r\n              );\r\n            }\r\n          })}\r\n          </div>\r\n        );\r\n      })}\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  rM() {\r\n    this.setState(this.state);\r\n    this.resetMaze();\r\n    const grid = getInitialGrid();\r\n    this.setState({ grid });\r\n  }\r\n\r\n  createVerticalMaze() {\r\n    const grid1 = getInitialGrid();\r\n    this.setState({ grid1 });\r\n    const {grid, mouseIsPressed} = this.state;\r\n    return(\r\n      <>\r\n      <div className=\"grid\">\r\n      {grid.map((row, rowIdx) => {\r\n        return (\r\n          <div key={rowIdx}>\r\n          {row.map((node, nodeIdx) => {\r\n            const {row, col, isFinish, isStart, isWall} = node;\r\n            if(row===0 || row==20 || col==0 || col==48)\r\n            {\r\n              console.log(col);\r\n              const newGrid = getNewGridWithWallToggledOn(this.state.grid, row, col);\r\n              this.setState({grid: newGrid});\r\n              return (\r\n                <Node\r\n                key={nodeIdx}\r\n                col={col}\r\n                isFinish={isFinish}\r\n                isStart={isStart}\r\n                isWall={true}\r\n                mouseIsPressed={mouseIsPressed}\r\n                onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                onMouseEnter={(row, col) =>\r\n                  this.handleMouseEnter(row, col)\r\n                }\r\n                onMouseUp={() => this.handleMouseUp()}\r\n                row={row}></Node>\r\n              );\r\n            }\r\n            else if(col%4==0 && row!=19)\r\n            {\r\n              console.log(col);\r\n              const newGrid = getNewGridWithWallToggledOn(this.state.grid, row, col);\r\n              this.setState({grid: newGrid});\r\n              return (\r\n                <Node\r\n                key={nodeIdx}\r\n                col={col}\r\n                isFinish={isFinish}\r\n                isStart={isStart}\r\n                isWall={true}\r\n                mouseIsPressed={mouseIsPressed}\r\n                onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                onMouseEnter={(row, col) =>\r\n                  this.handleMouseEnter(row, col)\r\n                }\r\n                onMouseUp={() => this.handleMouseUp()}\r\n                row={row}></Node>\r\n              );\r\n            }\r\n            else if(col%2==0 && col%4!=0 && row!=1)\r\n            {\r\n              console.log(col);\r\n              const newGrid = getNewGridWithWallToggledOn(this.state.grid, row, col);\r\n              this.setState({grid: newGrid});\r\n              return (\r\n                <Node\r\n                key={nodeIdx}\r\n                col={col}\r\n                isFinish={isFinish}\r\n                isStart={isStart}\r\n                isWall={true}\r\n                mouseIsPressed={mouseIsPressed}\r\n                onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                onMouseEnter={(row, col) =>\r\n                  this.handleMouseEnter(row, col)\r\n                }\r\n                onMouseUp={() => this.handleMouseUp()}\r\n                row={row}></Node>\r\n              );\r\n            }\r\n            else\r\n            {\r\n              console.log(col);\r\n              const newGrid = getNewGridWithWallToggledOff(this.state.grid, row, col);\r\n              this.setState({grid: newGrid});\r\n              return (\r\n                <Node\r\n                key={nodeIdx}\r\n                col={col}\r\n                isFinish={isFinish}\r\n                isStart={isStart}\r\n                isWall={false}\r\n                mouseIsPressed={mouseIsPressed}\r\n                onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                onMouseEnter={(row, col) =>\r\n                  this.handleMouseEnter(row, col)\r\n                }\r\n                onMouseUp={() => this.handleMouseUp()}\r\n                row={row}></Node>\r\n              );\r\n            }\r\n          })}\r\n          </div>\r\n        );\r\n      })}\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  createHorizontalMaze() {\r\n    const grid1 = getInitialGrid();\r\n    this.setState({ grid1 });\r\n    const {grid, mouseIsPressed} = this.state;\r\n    let i=1;\r\n    return(\r\n      <>\r\n      <div className=\"grid\">\r\n      {grid.map((row, rowIdx) => {\r\n        return (\r\n          <div key={rowIdx}>\r\n          {row.map((node, nodeIdx) => {\r\n            const {row, col, isFinish, isStart, isWall} = node;\r\n            if(row===0 || row==20 || col==0 || col==48)\r\n            {\r\n              console.log(col);\r\n              const newGrid = getNewGridWithWallToggledOn(this.state.grid, row, col);\r\n              this.setState({grid: newGrid});\r\n              return (\r\n                <Node\r\n                key={nodeIdx}\r\n                col={col}\r\n                isFinish={isFinish}\r\n                isStart={isStart}\r\n                isWall={true}\r\n                mouseIsPressed={mouseIsPressed}\r\n                onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                onMouseEnter={(row, col) =>\r\n                  this.handleMouseEnter(row, col)\r\n                }\r\n                onMouseUp={() => this.handleMouseUp()}\r\n                row={row}></Node>\r\n              );\r\n            }\r\n            else if(row%4==0 && col!=47)\r\n            {\r\n              console.log(col);\r\n              const newGrid = getNewGridWithWallToggledOn(this.state.grid, row, col);\r\n              this.setState({grid: newGrid});\r\n              return (\r\n                <Node\r\n                key={nodeIdx}\r\n                col={col}\r\n                isFinish={isFinish}\r\n                isStart={isStart}\r\n                isWall={true}\r\n                mouseIsPressed={mouseIsPressed}\r\n                onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                onMouseEnter={(row, col) =>\r\n                  this.handleMouseEnter(row, col)\r\n                }\r\n                onMouseUp={() => this.handleMouseUp()}\r\n                row={row}></Node>\r\n              );\r\n            }\r\n            else if(row%2==0 && row%4!=0 && col!=1)\r\n            {\r\n              console.log(col);\r\n              const newGrid = getNewGridWithWallToggledOn(this.state.grid, row, col);\r\n              this.setState({grid: newGrid});\r\n              return (\r\n                <Node\r\n                key={nodeIdx}\r\n                col={col}\r\n                isFinish={isFinish}\r\n                isStart={isStart}\r\n                isWall={true}\r\n                mouseIsPressed={mouseIsPressed}\r\n                onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                onMouseEnter={(row, col) =>\r\n                  this.handleMouseEnter(row, col)\r\n                }\r\n                onMouseUp={() => this.handleMouseUp()}\r\n                row={row}></Node>\r\n              );\r\n            }\r\n            else\r\n            {\r\n              console.log(col);\r\n              const newGrid = getNewGridWithWallToggledOff(this.state.grid, row, col);\r\n              this.setState({grid: newGrid});\r\n              return (\r\n                <Node\r\n                key={nodeIdx}\r\n                col={col}\r\n                isFinish={isFinish}\r\n                isStart={isStart}\r\n                isWall={false}\r\n                mouseIsPressed={mouseIsPressed}\r\n                onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                onMouseEnter={(row, col) =>\r\n                  this.handleMouseEnter(row, col)\r\n                }\r\n                onMouseUp={() => this.handleMouseUp()}\r\n                row={row}></Node>\r\n              );\r\n            }\r\n          })}\r\n          </div>\r\n        );\r\n      })}\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  startVisualization() {\r\n    if(this.refs.visualizationType.value===\"Dijkstra\")\r\n    {\r\n      this.visualizeDijkstra();\r\n    }\r\n    if(this.refs.visualizationType.value===\"AStar\")\r\n    {\r\n      this.visualizeASearch();\r\n    }\r\n    if(this.refs.visualizationType.value===\"DFS\")\r\n    {\r\n      this.visualizeDFS();\r\n    }\r\n    if(this.refs.visualizationType.value===\"BFS\")\r\n    {\r\n      this.visualizeDijkstra();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {grid, mouseIsPressed} = this.state;\r\n\r\n    return (\r\n      <>\r\n      <select ref=\"visualizationType\">\r\n      <option value=\"Dijkstra\">Dijkstra</option>\r\n      <option value=\"AStar\">A* Search</option>\r\n      <option value=\"DFS\">Depth First Search</option>\r\n      <option value=\"BFS\">Breadth First Search</option>\r\n      </select>\r\n      <button onClick={()=>this.startVisualization()}>\r\n        Start Visualization\r\n      </button>\r\n      <button onClick={() => this.rM()}>\r\n      Reset Board\r\n      </button>\r\n      <button onClick={() => this.createVerticalMaze()}>\r\n      Create Vertical Maze\r\n      </button>\r\n      <button onClick={() => this.createHorizontalMaze()}>\r\n      Create Horizontal Maze\r\n      </button>\r\n      <button onClick={() => this.createRandomMaze()}>\r\n      Create Random Maze\r\n      </button>\r\n      <div className=\"grid\" id=\"m\">\r\n      {grid.map((row, rowIdx) => {\r\n        return (\r\n          <div key={rowIdx} id=\"n\">\r\n          {row.map((node, nodeIdx) => {\r\n            const {row, col, isFinish, isStart, isWall} = node;\r\n            return (\r\n              <Node\r\n              key={nodeIdx}\r\n              col={col}\r\n              isFinish={isFinish}\r\n              isStart={isStart}\r\n              isWall={isWall}\r\n              mouseIsPressed={mouseIsPressed}\r\n              color='white'\r\n              onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n              onMouseEnter={(row, col) =>\r\n                this.handleMouseEnter(row, col)\r\n              }\r\n              onMouseUp={() => this.handleMouseUp()}\r\n              row={row}></Node>\r\n            );\r\n          })}\r\n          </div>\r\n        );\r\n      })}\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst getInitialGrid = () => {\r\n  const grid = [];\r\n  for (let row = 0; row < 21; row++) {\r\n    const currentRow = [];\r\n    for (let col = 0; col < 49; col++) {\r\n      currentRow.push(createNode(col, row));\r\n    }\r\n    grid.push(currentRow);\r\n  }\r\n  return grid;\r\n};\r\nconst createNode = (col, row) => {\r\n  return {\r\n    col,\r\n    row,\r\n    isStart: row === START_NODE_ROW && col === START_NODE_COL,\r\n    isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\r\n    distance: Infinity,\r\n    isVisited: false,\r\n    isWall: false,\r\n    previousNode: null,\r\n    direction: null,\r\n    totaldistance: 0,\r\n    weight: 0,\r\n    heuristicValue: Math.abs(row-FINISH_NODE_ROW) + Math.abs(col-FINISH_NODE_COL),\r\n  };\r\n};\r\nconst getNewGridWithWallToggled = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  if (row == 9 && (col == 15 || col == 35)) {\r\n    return newGrid;\r\n  }\r\n  const newNode = {\r\n    ...node,\r\n    isWall: !node.isWall,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\n\r\nconst getNewGridWithWallToggledOn = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isWall: true,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\nconst getNewGridWithWallToggledOff = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isWall: false,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\n\r\nconst getNewGridWithStart = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isStart: true,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\nconst getNewGridWithEnd = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isFinish: true,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\nfunction randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max-min+1) + min);\r\n}\r\n","export function asearch(grid, start, target) {\r\n  if (!start || !target || start === target) {\r\n    return false;\r\n  }\r\n  const ol=[];\r\n  ol.push(start);\r\n  const vnio=[];\r\n  vnio.push(start);\r\n  let curr=start;\r\n  curr.distance=0;\r\n  let f=1;\r\n  while (ol.length!=0 && f==1) {\r\n    let nos;\r\n    let td=100;\r\n    if(curr==target)\r\n    {\r\n      break;\r\n    }\r\n    for(let i=0;i<vnio.length;++i)\r\n    {\r\n      if(vnio[i].row==20 && vnio[i].col==48)\r\n      {\r\n        \r\n        let a=grid[vnio[i].row-1][vnio[i].col];\r\n        let c=grid[vnio[i].row][vnio[i].col-1];\r\n        let cha=1;\r\n        let chc=1;\r\n        for(let j=0;j<vnio.length;++j)\r\n        {\r\n          if(vnio[j]==a)\r\n          {\r\n            cha=0;\r\n          }\r\n          if(vnio[j]==c)\r\n          {\r\n            chc=0;\r\n          }\r\n        }\r\n        if(cha==1 && !a.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(a.row-target.row)+Math.abs(a.col-target.col)))))\r\n        {\r\n          nos=a;\r\n          td=vnio[i].distance+1;\r\n        }\r\n        if(chc==1 && !c.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(c.row-target.row)+Math.abs(c.col-target.col)))))\r\n        {\r\n          nos=c;\r\n          td=vnio[i].distance+1;\r\n        }\r\n      }\r\n      else if(vnio[i].row==20 && vnio[i].col==0)\r\n      {\r\n        let a=grid[vnio[i].row-1][vnio[i].col];\r\n        let d=grid[vnio[i].row][vnio[i].col+1];\r\n        let cha=1;\r\n        let chd=1;\r\n        for(let j=0;j<vnio.length;++j)\r\n        {\r\n          if(vnio[j]==a)\r\n          {\r\n            cha=0;\r\n          }\r\n          if(vnio[j]==d)\r\n          {\r\n            chd=0;\r\n          }\r\n        }\r\n        if(cha==1 && !a.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(a.row-target.row)+Math.abs(a.col-target.col)))))\r\n        {\r\n          nos=a;\r\n          td=vnio[i].distance+1;\r\n        }\r\n        if(chd==1 && !d.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(d.row-target.row)+Math.abs(d.col-target.col)))))        {\r\n          nos=d;\r\n          td=vnio[i].distance+1;\r\n        }\r\n      }\r\n      else if(vnio[i].row==0 && vnio[i].col==48)\r\n      {\r\n        let b=grid[vnio[i].row+1][vnio[i].col];\r\n        let c=grid[vnio[i].row][vnio[i].col-1];\r\n        let chb=1;\r\n        let chc=1;\r\n        for(let j=0;j<vnio.length;++j)\r\n        {\r\n          if(vnio[j]==b)\r\n          {\r\n            chb=0;\r\n          }\r\n          if(vnio[j]==c)\r\n          {\r\n            chc=0;\r\n          }\r\n        }\r\n        if(chb==1 && !b.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(b.row-target.row)+Math.abs(b.col-target.col)))))\r\n        {\r\n          nos=b;\r\n          td=vnio[i].distance+1;\r\n        }\r\n        if(chc==1 && !c.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(c.row-target.row)+Math.abs(c.col-target.col)))))\r\n        {\r\n          nos=c;\r\n          td=vnio[i].distance+1;\r\n        }\r\n      }\r\n      else if(vnio[i].row==0 && vnio[i].col==0)\r\n      {\r\n        let b=grid[vnio[i].row+1][vnio[i].col];\r\n        let d=grid[vnio[i].row][vnio[i].col+1];\r\n        let chb=1;\r\n        let chd=1;\r\n        for(let j=0;j<vnio.length;++j)\r\n        {\r\n          if(vnio[j]==b)\r\n          {\r\n            chb=0;\r\n          }\r\n          if(vnio[j]==d)\r\n          {\r\n            chd=0;\r\n          }\r\n        }\r\n        if(chb==1 && !b.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(b.row-target.row)+Math.abs(b.col-target.col)))))\r\n        {\r\n          nos=b;\r\n          td=vnio[i].distance+1;\r\n        }\r\n        if(chd==1 && !d.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(d.row-target.row)+Math.abs(d.col-target.col)))))        {\r\n          nos=d;\r\n          td=vnio[i].distance+1;\r\n        }\r\n      }\r\n      else if(vnio[i].row==20)\r\n      {\r\n        let a=grid[vnio[i].row-1][vnio[i].col];\r\n        let c=grid[vnio[i].row][vnio[i].col-1];\r\n        let d=grid[vnio[i].row][vnio[i].col+1];\r\n        let cha=1;\r\n        let chc=1;\r\n        let chd=1;\r\n        for(let j=0;j<vnio.length;++j)\r\n        {\r\n          if(vnio[j]==a)\r\n          {\r\n            cha=0;\r\n          }\r\n          if(vnio[j]==c)\r\n          {\r\n            chc=0;\r\n          }\r\n          if(vnio[j]==d)\r\n          {\r\n            chd=0;\r\n          }\r\n        }\r\n        if(cha==1 && !a.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(a.row-target.row)+Math.abs(a.col-target.col)))))\r\n        {\r\n          nos=a;\r\n          td=vnio[i].distance+1;\r\n        }\r\n        if(chc==1 && !c.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(c.row-target.row)+Math.abs(c.col-target.col)))))\r\n        {\r\n          nos=c;\r\n          td=vnio[i].distance+1;\r\n        }\r\n        if(chd==1 && !d.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(d.row-target.row)+Math.abs(d.col-target.col)))))        {\r\n          nos=d;\r\n          td=vnio[i].distance+1;\r\n        }\r\n      }\r\n      else if(vnio[i].row==0)\r\n      {\r\n        let b=grid[vnio[i].row+1][vnio[i].col];\r\n        let c=grid[vnio[i].row][vnio[i].col-1];\r\n        let d=grid[vnio[i].row][vnio[i].col+1];\r\n        let chb=1;\r\n        let chc=1;\r\n        let chd=1;\r\n        for(let j=0;j<vnio.length;++j)\r\n        {\r\n          if(vnio[j]==b)\r\n          {\r\n            chb=0;\r\n          }\r\n          if(vnio[j]==c)\r\n          {\r\n            chc=0;\r\n          }\r\n          if(vnio[j]==d)\r\n          {\r\n            chd=0;\r\n          }\r\n        }\r\n        if(chb==1 && !b.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(b.row-target.row)+Math.abs(b.col-target.col)))))\r\n        {\r\n          nos=b;\r\n          td=vnio[i].distance+1;\r\n        }\r\n        if(chc==1 && !c.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(c.row-target.row)+Math.abs(c.col-target.col)))))\r\n        {\r\n          nos=c;\r\n          td=vnio[i].distance+1;\r\n        }\r\n        if(chd==1 && !d.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(d.row-target.row)+Math.abs(d.col-target.col)))))        {\r\n          nos=d;\r\n          td=vnio[i].distance+1;\r\n        }\r\n      }\r\n      else if(vnio[i].col==48)\r\n      {\r\n        \r\n        let a=grid[vnio[i].row-1][vnio[i].col];\r\n        let b=grid[vnio[i].row+1][vnio[i].col];\r\n        let c=grid[vnio[i].row][vnio[i].col-1];\r\n        let cha=1;\r\n        let chb=1;\r\n        let chc=1;\r\n        for(let j=0;j<vnio.length;++j)\r\n        {\r\n          if(vnio[j]==a)\r\n          {\r\n            cha=0;\r\n          }\r\n          if(vnio[j]==b)\r\n          {\r\n            chb=0;\r\n          }\r\n          if(vnio[j]==c)\r\n          {\r\n            chc=0;\r\n          }\r\n        }\r\n        if(cha==1 && !a.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(a.row-target.row)+Math.abs(a.col-target.col)))))\r\n        {\r\n          nos=a;\r\n          td=vnio[i].distance+1;\r\n        }\r\n        if(chb==1 && !b.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(b.row-target.row)+Math.abs(b.col-target.col)))))\r\n        {\r\n          nos=b;\r\n          td=vnio[i].distance+1;\r\n        }\r\n        if(chc==1 && !c.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(c.row-target.row)+Math.abs(c.col-target.col)))))\r\n        {\r\n          nos=c;\r\n          td=vnio[i].distance+1;\r\n        }\r\n      }\r\n      else if(vnio[i].col==0)\r\n      {\r\n        \r\n        let a=grid[vnio[i].row-1][vnio[i].col];\r\n        let b=grid[vnio[i].row+1][vnio[i].col];\r\n        let d=grid[vnio[i].row][vnio[i].col+1];\r\n        let cha=1;\r\n        let chb=1;\r\n        let chd=1;\r\n        for(let j=0;j<vnio.length;++j)\r\n        {\r\n          if(vnio[j]==a)\r\n          {\r\n            cha=0;\r\n          }\r\n          if(vnio[j]==b)\r\n          {\r\n            chb=0;\r\n          }\r\n          if(vnio[j]==d)\r\n          {\r\n            chd=0;\r\n          }\r\n        }\r\n        if(cha==1 && !a.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(a.row-target.row)+Math.abs(a.col-target.col)))))\r\n        {\r\n          nos=a;\r\n          td=vnio[i].distance+1;\r\n        }\r\n        if(chb==1 && !b.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(b.row-target.row)+Math.abs(b.col-target.col)))))\r\n        {\r\n          nos=b;\r\n          td=vnio[i].distance+1;\r\n        }\r\n        if(chd==1 && !d.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(d.row-target.row)+Math.abs(d.col-target.col)))))        {\r\n          nos=d;\r\n          td=vnio[i].distance+1;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        let a=grid[vnio[i].row-1][vnio[i].col];\r\n        let b=grid[vnio[i].row+1][vnio[i].col];\r\n        let c=grid[vnio[i].row][vnio[i].col-1];\r\n        let d=grid[vnio[i].row][vnio[i].col+1];\r\n        let cha=1;\r\n        let chb=1;\r\n        let chc=1;\r\n        let chd=1;\r\n        for(let j=0;j<vnio.length;++j)\r\n        {\r\n          if(vnio[j]==a)\r\n          {\r\n            cha=0;\r\n          }\r\n          if(vnio[j]==b)\r\n          {\r\n            chb=0;\r\n          }\r\n          if(vnio[j]==c)\r\n          {\r\n            chc=0;\r\n          }\r\n          if(vnio[j]==d)\r\n          {\r\n            chd=0;\r\n          }\r\n        }\r\n        if(cha==1 && !a.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(a.row-target.row)+Math.abs(a.col-target.col)))))\r\n        {\r\n          nos=a;\r\n          td=vnio[i].distance+1;\r\n        }\r\n        if(chb==1 && !b.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(b.row-target.row)+Math.abs(b.col-target.col)))))\r\n        {\r\n          nos=b;\r\n          td=vnio[i].distance+1;\r\n        }\r\n        if(chc==1 && !c.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(c.row-target.row)+Math.abs(c.col-target.col)))))\r\n        {\r\n          nos=c;\r\n          td=vnio[i].distance+1;\r\n        }\r\n        if(chd==1 && !d.isWall && ((!nos) || (td+(Math.abs(nos.row-target.row)+Math.abs(nos.col-target.col)))>=(vnio[i].distance+1+(Math.abs(d.row-target.row)+Math.abs(d.col-target.col)))))        {\r\n          nos=d;\r\n          td=vnio[i].distance+1;\r\n        }\r\n      }\r\n    }\r\n    if(!nos)\r\n    {\r\n      break;\r\n    }\r\n    else\r\n    {\r\n      nos.distance=(td);\r\n      curr=nos;\r\n    }\r\n    vnio.push(curr);\r\n  }\r\n  return vnio;\r\n}\r\n\r\nexport function getNodesInShortestPathOrderA(grid,finishNode) {\r\n  let curr=finishNode;\r\n  const sp=[];\r\n  if(curr.distance==-1)\r\n  {\r\n    return sp;\r\n  }\r\n  while(curr.distance!=0)\r\n  {\r\n    if(curr.row==0 && curr.col==0) {\r\n      let b=grid[curr.row+1][curr.col];\r\n      let d=grid[curr.row][curr.col+1];\r\n      if(!b.isWall && b.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=b;\r\n        continue;\r\n      }\r\n      else if(!d.isWall && d.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=d;\r\n        continue;\r\n      }\r\n    }\r\n    else if(curr.row==0 && curr.col==48) {\r\n      let b=grid[curr.row+1][curr.col];\r\n      let c=grid[curr.row][curr.col-1];\r\n      if(!b.isWall && (b.distance==curr.distance-1))\r\n      {\r\n        sp.push(curr);\r\n        curr=b;\r\n        continue;\r\n      }\r\n      else if(!c.isWall && c.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=c;\r\n        continue;\r\n      }\r\n    }\r\n    else if(curr.row==20 && curr.col==0) {\r\n      let a=grid[curr.row-1][curr.col];\r\n      let d=grid[curr.row][curr.col+1];\r\n      if(!a.isWall && a.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=a;\r\n        continue;\r\n      }\r\n      else if(!d.isWall && d.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=d;\r\n        continue;\r\n      }\r\n    }\r\n    else if(curr.row==20 && curr.col==48) {\r\n      let a=grid[curr.row-1][curr.col];\r\n      let c=grid[curr.row][curr.col-1];\r\n      if(!a.isWall && a.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=a;\r\n        continue;\r\n      }\r\n      else if(!c.isWall && c.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=c;\r\n        continue;\r\n      }\r\n    }\r\n    else if(curr.row==0) {\r\n      let b=grid[curr.row+1][curr.col];\r\n      let d=grid[curr.row][curr.col+1];\r\n      let c=grid[curr.row][curr.col-1];\r\n      if(!b.isWall && b.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=b;\r\n        continue;\r\n      }\r\n      else if(!c.isWall && c.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=c;\r\n        continue;\r\n      }\r\n      else if(!d.isWall && d.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=d;\r\n        continue;\r\n      }\r\n    }\r\n    else if(curr.row==20) {\r\n      let a=grid[curr.row-1][curr.col];\r\n      let c=grid[curr.row][curr.col-1];\r\n      let d=grid[curr.row][curr.col+1];\r\n      if(!a.isWall && a.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=a;\r\n        continue;\r\n      }\r\n      else if(!c.isWall && c.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=c;\r\n        continue;\r\n      }\r\n      else if(!d.isWall && d.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=d;\r\n        continue;\r\n      }\r\n    }\r\n    else if(curr.col==0) {\r\n      let a=grid[curr.row-1][curr.col];\r\n      let b=grid[curr.row+1][curr.col];\r\n      let d=grid[curr.row][curr.col+1];\r\n      if(!a.isWall && a.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=a;\r\n        continue;\r\n      }\r\n      else if(!b.isWall && b.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=b;\r\n        continue;\r\n      }\r\n      else if(!d.isWall && d.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=d;\r\n        continue;\r\n      }\r\n    }\r\n    else if(curr.col==48) {\r\n      let a=grid[curr.row-1][curr.col];\r\n      let b=grid[curr.row+1][curr.col];\r\n      let c=grid[curr.row][curr.col-1];\r\n      if(!a.isWall && a.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=a;\r\n        continue;\r\n      }\r\n      else if(!b.isWall && b.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=b;\r\n        continue;\r\n      }\r\n      else if(!c.isWall && c.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=c;\r\n        continue;\r\n      }\r\n    }\r\n    else {\r\n      let a=grid[curr.row-1][curr.col];\r\n      let b=grid[curr.row+1][curr.col];\r\n      let c=grid[curr.row][curr.col-1];\r\n      let d=grid[curr.row][curr.col+1];\r\n      if(!a.isWall && a.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=a;\r\n        continue;\r\n      }\r\n      else if(!b.isWall && b.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=b;\r\n        continue;\r\n      }\r\n      else if(!c.isWall && c.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=c;\r\n        continue;\r\n      }\r\n      else if(!d.isWall && d.distance==curr.distance-1)\r\n      {\r\n        sp.push(curr);\r\n        curr=d;\r\n        continue;\r\n      }\r\n    }\r\n  }\r\n  sp.push(curr);\r\n  return sp;\r\n}\r\n","export function dfs(grid, startNode, finishNode)\r\n{\r\n    const ol=[];\r\n    const nulll=[];\r\n    const vis=[];\r\n    ol.push(startNode);\r\n    vis.push(startNode);\r\n    var cNode=startNode;\r\n    while(true)\r\n    {\r\n        console.log(cNode);\r\n        if(ol.length===0)\r\n        {\r\n            return nulll; \r\n        }\r\n        if(cNode==finishNode)\r\n        {\r\n            return vis;\r\n        }\r\n        if(ol[ol.length-1].row<20)\r\n        {\r\n            cNode=grid[ol[ol.length-1].row+1][ol[ol.length-1].col];\r\n            if(!vis.includes(cNode) && !cNode.isWall)\r\n            {\r\n                ol.push(cNode);\r\n                vis.push(cNode);\r\n                continue;\r\n            }\r\n        }\r\n        if(ol[ol.length-1].col<48)\r\n        {\r\n            cNode=grid[ol[ol.length-1].row][ol[ol.length-1].col+1];\r\n            if(!vis.includes(cNode) && !cNode.isWall)\r\n            {\r\n                ol.push(cNode);\r\n                vis.push(cNode);\r\n                continue;\r\n            }\r\n        }\r\n        if(ol[ol.length-1].row>0)\r\n        {\r\n            cNode=grid[ol[ol.length-1].row-1][ol[ol.length-1].col];\r\n            if(!vis.includes(cNode) && !cNode.isWall)\r\n            {\r\n                ol.push(cNode);\r\n                vis.push(cNode);\r\n                continue;\r\n            }\r\n        }\r\n        if(ol[ol.length-1].col>0)\r\n        {\r\n            cNode=grid[ol[ol.length-1].row][ol[ol.length-1].col-1];\r\n            if(!vis.includes(cNode) && !cNode.isWall)\r\n            {\r\n                ol.push(cNode);\r\n                vis.push(cNode);\r\n                continue;\r\n            }\r\n        }\r\n        ol.pop();\r\n    }\r\n}\r\n\r\nexport function getNodesInShortestPathOrderDFS(grid, startNode, finishNode)\r\n{\r\n    const ol=[];\r\n    const nulll=[];\r\n    const vis=[];\r\n    ol.push(startNode);\r\n    vis.push(startNode);\r\n    var cNode=startNode;\r\n    while(true)\r\n    {\r\n        console.log(cNode);\r\n        if(ol.length===0)\r\n        {\r\n            return nulll; \r\n        }\r\n        if(cNode==finishNode)\r\n        {\r\n            return ol;\r\n        }\r\n        if(ol[ol.length-1].row<20)\r\n        {\r\n            cNode=grid[ol[ol.length-1].row+1][ol[ol.length-1].col];\r\n            if(!vis.includes(cNode) && !cNode.isWall)\r\n            {\r\n                ol.push(cNode);\r\n                vis.push(cNode);\r\n                continue;\r\n            }\r\n        }\r\n        if(ol[ol.length-1].col<48)\r\n        {\r\n            cNode=grid[ol[ol.length-1].row][ol[ol.length-1].col+1];\r\n            if(!vis.includes(cNode) && !cNode.isWall)\r\n            {\r\n                ol.push(cNode);\r\n                vis.push(cNode);\r\n                continue;\r\n            }\r\n        }\r\n        if(ol[ol.length-1].row>0)\r\n        {\r\n            cNode=grid[ol[ol.length-1].row-1][ol[ol.length-1].col];\r\n            if(!vis.includes(cNode) && !cNode.isWall)\r\n            {\r\n                ol.push(cNode);\r\n                vis.push(cNode);\r\n                continue;\r\n            }\r\n        }\r\n        if(ol[ol.length-1].col>0)\r\n        {\r\n            cNode=grid[ol[ol.length-1].row][ol[ol.length-1].col-1];\r\n            if(!vis.includes(cNode) && !cNode.isWall)\r\n            {\r\n                ol.push(cNode);\r\n                vis.push(cNode);\r\n                continue;\r\n            }\r\n        }\r\n        ol.pop();\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport PathfindingVisualizer from './PathfindingVisualizer/PathfindingVisualizer.jsx'\nimport './App.css';\n\nfunction App() {\n  document.title=\"Pathfinding Visualizer\"\n  return (\n    <div className=\"App\">\n      <PathfindingVisualizer></PathfindingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}